declare module 'os' {
  export interface CpuInfo {
    model: string;
    speed: number;
    times: {
      user: number;
      nice: number;
      sys: number;
      idle: number;
      irq: number;
    };
  }

  export interface NetworkInterfaceInfo {
    address: string;
    netmask: string;
    family: string;
    mac: string;
    internal: boolean;
    cidr: string | null;
    scopeid?: number;
  }

  export interface UserInfo<T> {
    username: T;
    uid: number;
    gid: number;
    shell: T;
    homedir: T;
  }

  export function arch(): string;
  export function cpus(): CpuInfo[];
  export function endianness(): 'BE' | 'LE';
  export function freemem(): number;
  export function getPriority(pid?: number): number;
  export function homedir(): string;
  export function hostname(): string;
  export function loadavg(): number[];
  export function networkInterfaces(): { [index: string]: NetworkInterfaceInfo[] };
  export function platform(): NodeJS.Platform;
  export function release(): string;
  export function setPriority(pid: number, priority: number): void;
  export function setPriority(priority: number): void;
  export function tmpdir(): string;
  export function totalmem(): number;
  export function type(): string;
  export function uptime(): number;
  export function userInfo(options: { encoding: 'buffer' }): UserInfo<Buffer>;
  export function userInfo(options?: { encoding: string }): UserInfo<string>;
  export const EOL: string;
  export const constants: {
    UV_UDP_REUSEADDR: number;
    signals: {
      SIGHUP: number;
      SIGINT: number;
      SIGQUIT: number;
      SIGILL: number;
      SIGTRAP: number;
      SIGABRT: number;
      SIGIOT: number;
      SIGBUS: number;
      SIGFPE: number;
      SIGKILL: number;
      SIGUSR1: number;
      SIGSEGV: number;
      SIGUSR2: number;
      SIGPIPE: number;
      SIGALRM: number;
      SIGTERM: number;
      SIGCHLD: number;
      SIGSTKFLT: number;
      SIGCONT: number;
      SIGSTOP: number;
      SIGTSTP: number;
      SIGTTIN: number;
      SIGTTOU: number;
      SIGURG: number;
      SIGXCPU: number;
      SIGXFSZ: number;
      SIGVTALRM: number;
      SIGPROF: number;
      SIGWINCH: number;
      SIGIO: number;
      SIGPOLL: number;
      SIGPWR: number;
      SIGSYS: number;
      SIGUNUSED: number;
    };
    errno: {
      E2BIG: number;
      EACCES: number;
      EADDRINUSE: number;
      EADDRNOTAVAIL: number;
      EAFNOSUPPORT: number;
      EAGAIN: number;
      EALREADY: number;
      EBADF: number;
      EBADMSG: number;
      EBUSY: number;
      ECANCELED: number;
      ECHILD: number;
      ECONNABORTED: number;
      ECONNREFUSED: number;
      ECONNRESET: number;
      EDEADLK: number;
      EDESTADDRREQ: number;
      EDOM: number;
      EDQUOT: number;
      EEXIST: number;
      EFAULT: number;
      EFBIG: number;
      EHOSTUNREACH: number;
      EIDRM: number;
      EILSEQ: number;
      EINPROGRESS: number;
      EINTR: number;
      EINVAL: number;
      EIO: number;
      EISCONN: number;
      EISDIR: number;
      ELOOP: number;
      EMFILE: number;
      EMLINK: number;
      EMSGSIZE: number;
      EMULTIHOP: number;
      ENAMETOOLONG: number;
      ENETDOWN: number;
      ENETRESET: number;
      ENETUNREACH: number;
      ENFILE: number;
      ENOBUFS: number;
      ENODATA: number;
      ENODEV: number;
      ENOENT: number;
      ENOEXEC: number;
      ENOLCK: number;
      ENOLINK: number;
      ENOMEM: number;
      ENOMSG: number;
      ENOPROTOOPT: number;
      ENOSPC: number;
      ENOSR: number;
      ENOSTR: number;
      ENOSYS: number;
      ENOTCONN: number;
      ENOTDIR: number;
      ENOTEMPTY: number;
      ENOTSOCK: number;
      ENOTSUP: number;
      ENOTTY: number;
      ENXIO: number;
      EOPNOTSUPP: number;
      EOVERFLOW: number;
      EPERM: number;
      EPIPE: number;
      EPROTO: number;
      EPROTONOSUPPORT: number;
      EPROTOTYPE: number;
      ERANGE: number;
      EROFS: number;
      ESPIPE: number;
      ESRCH: number;
      ESTALE: number;
      ETIME: number;
      ETIMEDOUT: number;
      ETXTBSY: number;
      EWOULDBLOCK: number;
      EXDEV: number;
    };
    priority: {
      PRIORITY_LOW: number;
      PRIORITY_BELOW_NORMAL: number;
      PRIORITY_NORMAL: number;
      PRIORITY_ABOVE_NORMAL: number;
      PRIORITY_HIGH: number;
      PRIORITY_HIGHEST: number;
    };
  };
}
