{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm --version)",
      "Bash(npm install)",
      "Bash(psql:*)",
      "Bash(npm install:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(npx tsc:*)",
      "Bash(npm start)",
      "Bash(PORT=3000 npm start)",
      "Bash(PORT=3005 npm start)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(PORT=3006 npx tsc)",
      "Bash(PORT=3006 npm start)",
      "Bash(PORT=3007 npm start)",
      "Bash(npm run test:*)",
      "Bash(npm run lint)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(grep:*)",
      "Bash(npm run build:all:*)",
      "Bash(npm run install:all:*)",
      "Bash(timeout:*)",
      "Bash(npm run build:*)",
      "Bash(npm run validate:*)",
      "Bash(move:*)",
      "Bash(dir scriptswindowsstart-all.bat)",
      "Bash(dir:*)",
      "Bash(cmd /c:*)",
      "Bash(scriptswindowsstart-all.bat)",
      "Bash(powershell:*)",
      "Bash(npm cache clean:*)",
      "Bash(where pg_isready)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\pg_isready.exe\" -h localhost -p 5432)",
      "Bash(start cmd /c:*)",
      "Bash(taskkill:*)",
      "Bash(set PORT=3005)",
      "Bash(set PORT=3006)",
      "Bash(where redis-cli)",
      "Bash(where redis-server)",
      "Bash(sc query:*)",
      "Bash(wmic service:*)",
      "Bash(findstr:*)",
      "Bash(npm run stop:all:*)",
      "Bash(stop-all.bat)",
      "Bash(scriptswindowsstop-all.bat)",
      "Bash(npm run import:*)",
      "Bash(npm run:*)",
      "Bash(start http://localhost:3000/login)",
      "Bash(tasklist:*)",
      "Bash(\"scripts\\windows\\stop-all.bat\")",
      "Bash(\"scripts\\windows\\start-all.bat\")",
      "Bash(start http://localhost:3000)",
      "Bash(\"scripts\\windows\\setup-database.bat\")",
      "Bash(del run-migrations.js)",
      "Bash(cat:*)",
      "Bash(npm ls:*)",
      "Bash(PORT=3006 npm run dev)",
      "Bash(C:codemangalmscriptswindowsstop-all.bat)",
      "Bash(\"C:\\code\\mangalm\\scripts\\windows\\stop-all.bat\")",
      "Bash(start http://localhost:3000/stores)",
      "Bash(start http://localhost:3000/stores/4261931000001048015)",
      "Bash(start http://localhost:3000/stores/4261931000001048016)",
      "Bash(find:*)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -l)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"\\d predicted_orders\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT 1\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"\\d predicted_order_items\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"\\d call_prioritization\")",
      "Bash(start http://localhost:3000/stores/4261931000000166057)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT s.id, s.name, COUNT(hi.id) as order_count, MAX(hi.invoice_date) as last_order_date FROM stores s LEFT JOIN historical_invoices hi ON s.id = hi.store_id GROUP BY s.id ORDER BY s.name LIMIT 5\")",
      "Bash(PORT=3001 npm start)",
      "Bash(set REACT_APP_API_GATEWAY_URL=http://localhost:3003)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT COUNT(*) FROM predicted_orders\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT id, store_id, status, prediction_date FROM predicted_orders LIMIT 5\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT id, store_id, status, predicted_date FROM predicted_orders LIMIT 5\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -f \"C:\\code\\mangalm\\database\\scripts\\generate-predictions.sql\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT po.store_id, s.name, po.predicted_date, po.confidence, po.total_amount, COUNT(poi.id) as item_count FROM predicted_orders po JOIN stores s ON po.store_id = s.id LEFT JOIN predicted_order_items poi ON po.id = poi.predicted_order_id WHERE po.status = ''pending'' GROUP BY po.store_id, s.name, po.predicted_date, po.confidence, po.total_amount ORDER BY po.confidence DESC, po.predicted_date ASC LIMIT 10\")",
      "Bash(start \"API Gateway\" cmd /c \"npm start\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ''predicted_order_items''\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT column_name FROM information_schema.columns WHERE table_name = ''products'' LIMIT 10\")",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -d mangalm_sales -c \"SELECT id FROM predicted_orders LIMIT 1\")"
    ],
    "deny": []
  }
}